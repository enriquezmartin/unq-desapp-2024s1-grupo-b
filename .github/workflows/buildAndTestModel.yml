# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events to any branch
  push:
    branches:
      - '*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
          key: gradle-${{ runner.os }} gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      # Sets up JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
      - name: Grant Permissions to gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      # Run tests with Gradle
      - name: Run tests with Gradle
        run: ./gradlew test

      # Install SonarScanner
      # sudo apt-get update
      # sudo apt-get install -y unzip
      - name: Install SonarScanner
        run: |
          curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip
          mv sonar-scanner-cli-5.0.1.3006-linux sonar-scanner
          export PATH=$PWD/sonar-scanner/bin:$PATH

      # Configure SonarScanner properties
      - name: Configure SonarScanner
        run: |
          echo "sonar.host.url=https://sonarcloud.io" >> sonar-scanner/conf/sonar-scanner.properties
          echo "sonar.token=${{ secrets.SONAR_TOKEN }}" >> sonar-scanner/conf/sonar-scanner.properties
          echo "sonar.organization=desapp-grupo-b-2024s1" >> sonar-scanner/conf/sonar-scanner.properties
          echo "sonar.projectKey=enriquezmartin_unq-desapp-2024s1-grupo-b" >> sonar-scanner/conf/sonar-scanner.properties
          echo "sonar.projectName=CryptoExchange" >> sonar-scanner/conf/sonar-scanner.properties
          echo "sonar.coverage.jacoco.xmlReportPaths=build/jacocoReportDir/test/jacocoTestReport.xml" >> sonar-scanner/conf/sonar-scanner.properties
          echo "sonar.coverage.exclusions=**/test/**" >> sonar-scanner/conf/sonar-scanner.properties
          echo "sonar.coverage.exclusions=**/main/kotlin/ar/unq/desapp/grupob/backenddesappapi/dtos/**" >> sonar-scanner/conf/sonar-scanner.properties

      # Run SonarScanner
      - name: Run SonarScanner
        run: |
          sonar-scanner/bin/sonar-scanner
